#! /bin/sh
#puppetcommander	Details to follow
#
#chkconfig: 345 24 76
#
#
#desciption		Details to follow
#
#
#
### BEGIN INIT INFO
# Provides:		scriptname
# Required-Start:	$remote_fs $syslog
# Required-Stop:	$remote_fs Â$syslog
# Default-Start:	2 3 4 5
# Default-Stop:		0 1 6
# Short-Description:	Starts daemon at boot time
# Description:		Enable Service provided by daemon
### END INIT INFO

puppetcommanderd="/usr/sbin/puppetcommanderd"

# Lockfile
if [ -d /var/lock/subsys ]; then
	#Redhat/Centos subsystems
	lock="/var/lock/subsys/puppetcommander"
else	#Everything else
	lock="/var/lock/puppetcommander"
fi

# pidfile
pidfile="/var/run/puppetcommander.pid"

# Source function library
. /lib/lsb/init-functions

# Check if binary exists
if ! [ -f $puppetcommanderd ] 
then
	echo "PuppetCommander binary not found."
	exit 0
fi

# See how we were called
case "$1" in
	start) 
		echo -n "Starting PuppetCommander"
		if [ -f $lock ]; then
			if [ -s $pidfile ]; then
				kill `cat ${pidfile}` >/dev/null 2>&1
			fi
			rm -f ${pidfile}
			rm -f ${lock}
		fi
		
		rm -f ${pidfile}
		
		${puppetcommanderd} -d
		if [ $? = 0 ]; then
			log_success_msg
			touch $lock
			exit 0 
		else
			log_failure_msg
			exit 1
		fi
	;;
	
	stop)	
		echo -n "Shutting down PuppetCommander"

		if [ -s $pidfile ]; then
			kill `cat ${pidfile}` >/dev/null 2>&1
		fi
		rm -f ${pidfile}

		log_success_msg

		rm -f ${lock}
	;;
	
	restart)
		$0 stop
		sleep 2
		$0 start
	;;

	condrestart)
		if [ -f ${lock} ]; then
			$0 stop
			sleep 2
			$0 start
		fi
	;;
	status)
		if [ -f ${lock} ]; then
			if [ -s ${pidfile} ]; then
				if [ -e /proc/ `cat ${pidfile}` ]; then
					echo "PuppetCommander `cat ${pidfile}` is running."
					exit 0
				else
					echo "PuppetCommander `cat ${pidfile}` is not running."
					exit 1
				fi
			fi
	
		else
			echo "PuppetCommander service has not been started."
			exit 1
		fi

	;;
	force-reload)
		echo "Not implemented"
	;;
	*)
		echo "Usage puppetcommanderd {start|stop|restart|condrestart|status}" 
		exit 1
	;;

esac
exit 0

	
